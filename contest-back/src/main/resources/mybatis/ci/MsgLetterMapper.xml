<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.ci.mapper.MsgLetterMapper">

    <resultMap type="MsgLetter" id="MsgLetterResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="content" column="content"/>
        <result property="receiveUserId" column="receive_user_id"/>
        <result property="receiveUserNickName" column="receive_user_nick_name"/>
        <result property="receiveUserAvatar" column="receive_user_avatar"/>
        <result property="sendUserId" column="send_user_id"/>
        <result property="sendUserNickName" column="send_user_nick_name"/>
        <result property="sendUserAvatar" column="send_user_avatar"/>
        <result property="notReadNum" column="not_read_num"/>
        <result property="readFlag" column="read_flag"/>
    </resultMap>

    <sql id="selectMsgLetterVo">
        select id, create_by, create_time, content, receive_user_id, read_flag, send_user_id
        from ci_msg_letter
    </sql>

    <select id="selectMsgLetterList" parameterType="MsgLetter" resultMap="MsgLetterResult">
        <include refid="selectMsgLetterVo"/>
        <where>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="readFlag != null  and readFlag != ''">and read_flag = #{readFlag}</if>
        </where>
    </select>

    <select id="selectNotReadNum" parameterType="MsgLetter" resultMap="MsgLetterResult">
        select count(1) as "not_read_num", receive_user_id, send_user_id
        from ci_msg_letter
        where receive_user_id = #{receiveUserId}
          and send_user_id = #{sendUserId}
          and read_flag = 0
        group by receive_user_id
    </select>

    <select id="selectLastMsg" parameterType="MsgLetter" resultMap="MsgLetterResult">
        select id,
               receive_user_id,
               send_user_id,
               create_time,
               create_by,
               content
        from ci_msg_letter
        where (send_user_id = #{sendUserId} and receive_user_id = #{receiveUserId})
           or (send_user_id = #{receiveUserId} and receive_user_id = #{sendUserId})
        order by id desc
        limit 1
    </select>

    <select id="selectLetterDigestUser" parameterType="MsgLetter" resultMap="MsgLetterResult">
        select id, send_user_id, receive_user_id
        from ci_msg_letter
        where send_user_id = #{sendUserId}
           or receive_user_id = #{sendUserId}
        order by id desc
    </select>

    <select id="selectLetterContent" parameterType="MsgLetter" resultMap="MsgLetterResult">
        select id,
               create_by,
               create_time,
               content,
               receive_user_id,
               read_flag,
               send_user_id,
               (select avatar from sys_user where user_id = send_user_id)       as "send_user_avatar",
               (select nick_name from sys_user where user_id = send_user_id)    as "send_user_nick_name",
               (select avatar from sys_user where user_id = receive_user_id)    as "receive_user_avatar",
               (select nick_name from sys_user where user_id = receive_user_id) as "receive_user_nick_name"
        from ci_msg_letter
        where (send_user_id = #{sendUserId} and receive_user_id = #{receiveUserId})
           or (send_user_id = #{receiveUserId} and receive_user_id = #{sendUserId})
        order by id desc
    </select>


    <select id="selectMsgLetterById" parameterType="Long" resultMap="MsgLetterResult">
        <include refid="selectMsgLetterVo"/>
        where id = #{id}
    </select>

    <select id="selectMsgLetterOptions" parameterType="MsgLetter" resultType="Map">
        select id as "value",
        `name` as "label"
        from ci_msg_letter
        <if test="name != null and name != ''">
            where `name` like concat('%', #{name}, '%')
        </if>
    </select>

    <insert id="insertMsgLetter" parameterType="MsgLetter" useGeneratedKeys="true" keyProperty="id">
        insert into ci_msg_letter
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="receiveUserId != null ">receive_user_id,</if>
            <if test="sendUserId != null ">send_user_id,</if>
            <if test="readFlag != null  and readFlag != ''">read_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="receiveUserId != null ">#{receiveUserId},</if>
            <if test="sendUserId != null ">#{sendUserId},</if>
            <if test="readFlag != null  and readFlag != ''">#{readFlag},</if>
        </trim>
    </insert>

    <update id="updateMsgLetter" parameterType="MsgLetter">
        update ci_msg_letter
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="receiveUserId != null ">receive_user_id = #{receiveUserId},</if>
            <if test="readFlag != null  and readFlag != ''">read_flag = #{readFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="readMsgLetter" parameterType="MsgLetter">
        update ci_msg_letter
        set read_flag = 1
        where send_user_id = #{sendUserId}
          and receive_user_id = #{receiveUserId}
          and read_flag = 0
    </update>

    <delete id="deleteMsgLetterById" parameterType="Long">
        delete
        from ci_msg_letter
        where id = #{id}
    </delete>

    <delete id="deleteMsgLetterByIds" parameterType="String">
        delete from ci_msg_letter where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>